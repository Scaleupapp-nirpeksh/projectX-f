{"ast":null,"code":"var _jsxFileName = \"/Users/nirpekshnandan/Downloads/projectX-f/src/pages/RecordModal.jsx\",\n  _s = $RefreshSig$();\n// src/pages/RecordModal.jsx\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordModal = ({\n  onClose,\n  onSave,\n  categories = [],\n  fields = [],\n  existingRecord = null\n}) => {\n  _s();\n  // Determine if the modal is in Edit mode\n  const isEditMode = existingRecord !== null;\n\n  // Initialize state variables\n  const [error, setError] = useState(\"\");\n  const [type, setType] = useState(isEditMode ? existingRecord.type : \"revenue\"); // Updated\n  const [categoryId, setCategoryId] = useState(isEditMode ? existingRecord.categoryId : \"\");\n  const [fieldValues, setFieldValues] = useState({});\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [recurrenceFrequency, setRecurrenceFrequency] = useState(\"monthly\");\n  const [isPartialPayment, setIsPartialPayment] = useState(false);\n  const [totalAmount, setTotalAmount] = useState(\"\");\n  const [amountPaidOrReceived, setAmountPaidOrReceived] = useState(\"\");\n\n  // Filter fields based on selected record type\n  const applicableFields = fields.filter(field => {\n    return field.applicableTo.includes(type) || field.applicableTo.includes('both');\n  });\n\n  // Initialize field values when fields, type, or existingRecord changes\n  useEffect(() => {\n    const initialValues = {};\n    applicableFields.forEach(field => {\n      if (field.type === \"dropdown\" && field.options.length > 0) {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || field.options[0] : field.options[0];\n      } else if (field.type === \"boolean\") {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || false : false;\n      } else {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || \"\" : \"\";\n      }\n    });\n    setFieldValues(initialValues);\n\n    // Handle additional fields in edit mode\n    if (isEditMode) {\n      // Handle partial payment fields if they exist\n      if (existingRecord.fields.total_amount) {\n        setTotalAmount(existingRecord.fields.total_amount);\n      }\n      if (existingRecord.fields.amount_paid) {\n        setAmountPaidOrReceived(existingRecord.fields.amount_paid);\n      }\n      // Handle recurrence\n      if (existingRecord.recurrence && existingRecord.recurrence.frequency !== \"none\") {\n        setIsRecurring(true);\n        setRecurrenceFrequency(existingRecord.recurrence.frequency);\n      }\n      // Handle partial payment\n      if (existingRecord.fields.amount_paid || existingRecord.fields.amount_received) {\n        setIsPartialPayment(true);\n      }\n    }\n  }, [fields, type, existingRecord, isEditMode]);\n\n  // Recalculate formula fields whenever fieldValues change\n  useEffect(() => {\n    let updatedValues = {\n      ...fieldValues\n    };\n    let hasChanges = false;\n    for (let field of applicableFields) {\n      if (field.type === \"formula\" && field.expression) {\n        const expr = field.expression;\n\n        // Replace field names with their numeric values\n        const referencedNames = expr.match(/\\b[a-zA-Z0-9_]+\\b/g) || [];\n        let safeExpr = expr;\n        for (let ref of referencedNames) {\n          if (ref in updatedValues) {\n            let val = updatedValues[ref];\n            let numVal = Number(val);\n            if (isNaN(numVal)) {\n              numVal = 0;\n            }\n            // Replace all occurrences of ref with numVal\n            safeExpr = safeExpr.replace(new RegExp(`\\\\b${ref}\\\\b`, 'g'), numVal);\n          } else {\n            // If ref doesn't exist or is undefined, treat as 0\n            safeExpr = safeExpr.replace(new RegExp(`\\\\b${ref}\\\\b`, 'g'), 0);\n          }\n        }\n        let result;\n        try {\n          result = Function('\"use strict\";return (' + safeExpr + ')')();\n          if (String(result) !== updatedValues[field.name]) {\n            updatedValues[field.name] = String(result);\n            hasChanges = true;\n          }\n        } catch (e) {\n          console.warn(`Error evaluating formula for field ${field.name}: ${e.message}`);\n        }\n      }\n    }\n    if (hasChanges) {\n      setFieldValues(updatedValues);\n    }\n  }, [fieldValues, applicableFields]);\n  const handleSave = () => {\n    setError(\"\");\n    if (!type) {\n      setError(\"Please select a record type.\");\n      return;\n    }\n    if (!categoryId) {\n      setError(\"Please select a category.\");\n      return;\n    }\n\n    // Check if a final amount field is defined for the chosen type\n    const finalAmountField = applicableFields.find(f => f.config && f.config.isFinalAmount);\n    if (!finalAmountField) {\n      // If no final amount field for this type, show an error\n      setError(`A final amount field is required but not defined for ${type}.`);\n      return;\n    }\n\n    // Validate final amount field numeric\n    const finalAmountValueStr = fieldValues[finalAmountField.name];\n    const finalAmountValue = Number(finalAmountValueStr);\n    if (isNaN(finalAmountValue)) {\n      setError(`The final amount field \"${finalAmountField.label || finalAmountField.name}\" must be numeric.`);\n      return;\n    }\n    if (isPartialPayment) {\n      const t = Number(totalAmount);\n      const p = Number(amountPaidOrReceived);\n      if (isNaN(t) || t <= 0) {\n        setError(\"Please enter a valid total amount for partial payment.\");\n        return;\n      }\n      if (isNaN(p) || p < 0) {\n        setError(\"Please enter a valid amount paid/received so far.\");\n        return;\n      }\n      if (p > t) {\n        setError(\"Amount paid/received cannot exceed total amount.\");\n        return;\n      }\n    }\n    const finalFields = {\n      ...fieldValues\n    };\n    for (let field of applicableFields) {\n      if (field.type === 'number' || field.type === 'formula') {\n        const valStr = finalFields[field.name];\n        const valNum = Number(valStr);\n        if (isNaN(valNum)) {\n          setError(`\"${field.label || field.name}\" must be numeric.`);\n          return;\n        }\n        finalFields[field.name] = valNum;\n      }\n    }\n    const recordData = {\n      type,\n      categoryId,\n      fields: finalFields,\n      recurrence: isRecurring ? {\n        frequency: recurrenceFrequency\n      } : {\n        frequency: \"none\"\n      },\n      status: \"draft\"\n    };\n    if (isPartialPayment) {\n      recordData.fields[\"total_amount\"] = Number(totalAmount);\n      recordData.fields[\"amount_paid\"] = Number(amountPaidOrReceived);\n    }\n\n    // Include recordId if editing\n    if (isEditMode) {\n      recordData.recordId = existingRecord._id;\n    }\n    onSave(recordData);\n  };\n  const handleFieldChange = (field, value) => {\n    setFieldValues(prev => ({\n      ...prev,\n      [field.name]: value\n    }));\n  };\n  const renderFieldInput = field => {\n    let value = fieldValues[field.name] || \"\";\n    switch (field.type) {\n      case \"string\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n          value: value,\n          onChange: e => handleFieldChange(field, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this);\n      case \"number\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n          value: value,\n          onChange: e => handleFieldChange(field, e.target.value),\n          placeholder: \"Enter a number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this);\n      case \"date\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n          value: value,\n          onChange: e => handleFieldChange(field, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this);\n      case \"dropdown\":\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n          value: value,\n          onChange: e => handleFieldChange(field, e.target.value),\n          children: field.options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt,\n            children: opt\n          }, opt, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this);\n      case \"formula\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full p-2 border border-gray-300 rounded bg-gray-100 text-gray-700\",\n          value: value,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this);\n      case \"boolean\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: !!value,\n          onChange: e => handleFieldChange(field, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-white rounded-lg shadow-lg max-w-lg mx-auto text-black z-50 relative max-h-[80vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-gray-900\",\n        children: isEditMode ? \"Edit Record\" : \"Add New Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mb-4 text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-900 mb-1\",\n            children: \"Record Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: type,\n            onChange: e => setType(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n            disabled: isEditMode // Prevent changing type during edit\n            ,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"revenue\",\n              children: \"Revenue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"expense\",\n              children: \"Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-900 mb-1\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: categoryId,\n            onChange: e => setCategoryId(e.target.value),\n            className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select a Category --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat._id,\n              children: cat.name\n            }, cat._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), applicableFields.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-4 rounded border border-gray-200 space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-semibold mb-2\",\n            children: \"Additional Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), applicableFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-900 mb-1\",\n              children: [field.label || field.name, field.type === \"formula\" && \" (Auto-calculated)\", field.config && field.config.isFinalAmount && \" (Final Amount)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), renderFieldInput(field)]\n          }, field._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 p-4 rounded border border-blue-200 space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-900\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"mr-2\",\n              checked: isRecurring,\n              onChange: e => setIsRecurring(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), \"Is Recurring?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), isRecurring && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm text-gray-900 mb-1\",\n              children: \"Frequency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: recurrenceFrequency,\n              onChange: e => setRecurrenceFrequency(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"daily\",\n                children: \"Daily\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"weekly\",\n                children: \"Weekly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"monthly\",\n                children: \"Monthly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-50 p-4 rounded border border-yellow-200 space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-900\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"mr-2\",\n              checked: isPartialPayment,\n              onChange: e => setIsPartialPayment(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), \"Partial Payment/Receivable?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), isPartialPayment && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm text-gray-900 mb-1\",\n                children: \"Total Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"w-full p-2 border border-gray-300 rounded\",\n                value: totalAmount,\n                onChange: e => setTotalAmount(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm text-gray-900 mb-1\",\n                children: \"Amount Paid/Received So Far\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                className: \"w-full p-2 border border-gray-300 rounded\",\n                value: amountPaidOrReceived,\n                onChange: e => setAmountPaidOrReceived(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mt-6 space-x-3 border-t border-gray-200 pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-gray-300 text-gray-800 px-4 py-2 rounded hover:bg-gray-400 transition\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-600 text-white px-4 py-2 rounded font-semibold hover:bg-green-700 transition\",\n          onClick: handleSave,\n          children: isEditMode ? \"Update Record\" : \"Save Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordModal, \"6wd3YnRhwjfYHXxi/XbmRz6tKVs=\");\n_c = RecordModal;\nexport default RecordModal;\nvar _c;\n$RefreshReg$(_c, \"RecordModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","RecordModal","onClose","onSave","categories","fields","existingRecord","_s","isEditMode","error","setError","type","setType","categoryId","setCategoryId","fieldValues","setFieldValues","isRecurring","setIsRecurring","recurrenceFrequency","setRecurrenceFrequency","isPartialPayment","setIsPartialPayment","totalAmount","setTotalAmount","amountPaidOrReceived","setAmountPaidOrReceived","applicableFields","filter","field","applicableTo","includes","initialValues","forEach","options","length","name","total_amount","amount_paid","recurrence","frequency","amount_received","updatedValues","hasChanges","expression","expr","referencedNames","match","safeExpr","ref","val","numVal","Number","isNaN","replace","RegExp","result","Function","String","e","console","warn","message","handleSave","finalAmountField","find","f","config","isFinalAmount","finalAmountValueStr","finalAmountValue","label","t","p","finalFields","valStr","valNum","recordData","status","recordId","_id","handleFieldChange","value","prev","renderFieldInput","className","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","children","map","opt","readOnly","checked","disabled","cat","onClick","_c","$RefreshReg$"],"sources":["/Users/nirpekshnandan/Downloads/projectX-f/src/pages/RecordModal.jsx"],"sourcesContent":["// src/pages/RecordModal.jsx\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"../components/Modal\";\n\nconst RecordModal = ({ onClose, onSave, categories = [], fields = [], existingRecord = null }) => {\n  // Determine if the modal is in Edit mode\n  const isEditMode = existingRecord !== null;\n\n  // Initialize state variables\n  const [error, setError] = useState(\"\");\n  const [type, setType] = useState(isEditMode ? existingRecord.type : \"revenue\"); // Updated\n  const [categoryId, setCategoryId] = useState(isEditMode ? existingRecord.categoryId : \"\");\n  const [fieldValues, setFieldValues] = useState({});\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [recurrenceFrequency, setRecurrenceFrequency] = useState(\"monthly\");\n  const [isPartialPayment, setIsPartialPayment] = useState(false);\n  const [totalAmount, setTotalAmount] = useState(\"\");\n  const [amountPaidOrReceived, setAmountPaidOrReceived] = useState(\"\");\n\n  // Filter fields based on selected record type\n  const applicableFields = fields.filter(field => {\n    return field.applicableTo.includes(type) || field.applicableTo.includes('both');\n  });\n\n  // Initialize field values when fields, type, or existingRecord changes\n  useEffect(() => {\n    const initialValues = {};\n    applicableFields.forEach(field => {\n      if (field.type === \"dropdown\" && field.options.length > 0) {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || field.options[0] : field.options[0];\n      } else if (field.type === \"boolean\") {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || false : false;\n      } else {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || \"\" : \"\";\n      }\n    });\n\n    setFieldValues(initialValues);\n\n    // Handle additional fields in edit mode\n    if (isEditMode) {\n      // Handle partial payment fields if they exist\n      if (existingRecord.fields.total_amount) {\n        setTotalAmount(existingRecord.fields.total_amount);\n      }\n      if (existingRecord.fields.amount_paid) {\n        setAmountPaidOrReceived(existingRecord.fields.amount_paid);\n      }\n      // Handle recurrence\n      if (existingRecord.recurrence && existingRecord.recurrence.frequency !== \"none\") {\n        setIsRecurring(true);\n        setRecurrenceFrequency(existingRecord.recurrence.frequency);\n      }\n      // Handle partial payment\n      if (existingRecord.fields.amount_paid || existingRecord.fields.amount_received) {\n        setIsPartialPayment(true);\n      }\n    }\n  }, [fields, type, existingRecord, isEditMode]);\n\n  // Recalculate formula fields whenever fieldValues change\n  useEffect(() => {\n    let updatedValues = { ...fieldValues };\n    let hasChanges = false;\n\n    for (let field of applicableFields) {\n      if (field.type === \"formula\" && field.expression) {\n        const expr = field.expression;\n\n        // Replace field names with their numeric values\n        const referencedNames = expr.match(/\\b[a-zA-Z0-9_]+\\b/g) || [];\n        let safeExpr = expr;\n\n        for (let ref of referencedNames) {\n          if (ref in updatedValues) {\n            let val = updatedValues[ref];\n            let numVal = Number(val);\n            if (isNaN(numVal)) {\n              numVal = 0;\n            }\n            // Replace all occurrences of ref with numVal\n            safeExpr = safeExpr.replace(new RegExp(`\\\\b${ref}\\\\b`, 'g'), numVal);\n          } else {\n            // If ref doesn't exist or is undefined, treat as 0\n            safeExpr = safeExpr.replace(new RegExp(`\\\\b${ref}\\\\b`, 'g'), 0);\n          }\n        }\n\n        let result;\n        try {\n          result = Function('\"use strict\";return (' + safeExpr + ')')();\n          if (String(result) !== updatedValues[field.name]) {\n            updatedValues[field.name] = String(result);\n            hasChanges = true;\n          }\n        } catch (e) {\n          console.warn(`Error evaluating formula for field ${field.name}: ${e.message}`);\n        }\n      }\n    }\n\n    if (hasChanges) {\n      setFieldValues(updatedValues);\n    }\n\n  }, [fieldValues, applicableFields]);\n\n  const handleSave = () => {\n    setError(\"\");\n\n    if (!type) {\n      setError(\"Please select a record type.\");\n      return;\n    }\n    if (!categoryId) {\n      setError(\"Please select a category.\");\n      return;\n    }\n\n    // Check if a final amount field is defined for the chosen type\n    const finalAmountField = applicableFields.find(f => f.config && f.config.isFinalAmount);\n\n    if (!finalAmountField) {\n      // If no final amount field for this type, show an error\n      setError(`A final amount field is required but not defined for ${type}.`);\n      return;\n    }\n\n    // Validate final amount field numeric\n    const finalAmountValueStr = fieldValues[finalAmountField.name];\n    const finalAmountValue = Number(finalAmountValueStr);\n    if (isNaN(finalAmountValue)) {\n      setError(`The final amount field \"${finalAmountField.label || finalAmountField.name}\" must be numeric.`);\n      return;\n    }\n\n    if (isPartialPayment) {\n      const t = Number(totalAmount);\n      const p = Number(amountPaidOrReceived);\n      if (isNaN(t) || t <= 0) {\n        setError(\"Please enter a valid total amount for partial payment.\");\n        return;\n      }\n      if (isNaN(p) || p < 0) {\n        setError(\"Please enter a valid amount paid/received so far.\");\n        return;\n      }\n      if (p > t) {\n        setError(\"Amount paid/received cannot exceed total amount.\");\n        return;\n      }\n    }\n\n    const finalFields = { ...fieldValues };\n    for (let field of applicableFields) {\n      if (field.type === 'number' || field.type === 'formula') {\n        const valStr = finalFields[field.name];\n        const valNum = Number(valStr);\n        if (isNaN(valNum)) {\n          setError(`\"${field.label || field.name}\" must be numeric.`);\n          return;\n        }\n        finalFields[field.name] = valNum;\n      }\n    }\n\n    const recordData = {\n      type,\n      categoryId,\n      fields: finalFields,\n      recurrence: isRecurring ? { frequency: recurrenceFrequency } : { frequency: \"none\" },\n      status: \"draft\",\n    };\n\n    if (isPartialPayment) {\n      recordData.fields[\"total_amount\"] = Number(totalAmount);\n      recordData.fields[\"amount_paid\"] = Number(amountPaidOrReceived);\n    }\n\n    // Include recordId if editing\n    if (isEditMode) {\n      recordData.recordId = existingRecord._id;\n    }\n\n    onSave(recordData);\n  };\n\n  const handleFieldChange = (field, value) => {\n    setFieldValues(prev => ({ ...prev, [field.name]: value }));\n  };\n\n  const renderFieldInput = (field) => {\n    let value = fieldValues[field.name] || \"\";\n    switch (field.type) {\n      case \"string\":\n        return (\n          <input\n            type=\"text\"\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n            value={value}\n            onChange={(e) => handleFieldChange(field, e.target.value)}\n          />\n        );\n      case \"number\":\n        return (\n          <input\n            type=\"text\"\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n            value={value}\n            onChange={(e) => handleFieldChange(field, e.target.value)}\n            placeholder=\"Enter a number\"\n          />\n        );\n      case \"date\":\n        return (\n          <input\n            type=\"date\"\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n            value={value}\n            onChange={(e) => handleFieldChange(field, e.target.value)}\n          />\n        );\n      case \"dropdown\":\n        return (\n          <select\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n            value={value}\n            onChange={(e) => handleFieldChange(field, e.target.value)}\n          >\n            {field.options.map(opt => <option key={opt} value={opt}>{opt}</option>)}\n          </select>\n        );\n      case \"formula\":\n        return (\n          <input\n            type=\"text\"\n            className=\"w-full p-2 border border-gray-300 rounded bg-gray-100 text-gray-700\"\n            value={value}\n            readOnly\n          />\n        );\n      case \"boolean\":\n        return (\n          <input\n            type=\"checkbox\"\n            checked={!!value}\n            onChange={(e) => handleFieldChange(field, e.target.checked)}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"p-6 bg-white rounded-lg shadow-lg max-w-lg mx-auto text-black z-50 relative max-h-[80vh] overflow-y-auto\">\n        <h2 className=\"text-2xl font-bold mb-4 text-gray-900\">{isEditMode ? \"Edit Record\" : \"Add New Record\"}</h2>\n        {error && <p className=\"text-red-600 mb-4 text-sm\">{error}</p>}\n\n        <div className=\"space-y-4\">\n          {/* Record Type */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-900 mb-1\">Record Type</label>\n            <select\n              value={type}\n              onChange={(e) => setType(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n              disabled={isEditMode} // Prevent changing type during edit\n            >\n              <option value=\"revenue\">Revenue</option>\n              <option value=\"expense\">Expense</option>\n            </select>\n          </div>\n\n          {/* Category */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-900 mb-1\">Category</label>\n            <select\n              value={categoryId}\n              onChange={(e) => setCategoryId(e.target.value)}\n              className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n            >\n              <option value=\"\">-- Select a Category --</option>\n              {categories.map(cat => (\n                <option key={cat._id} value={cat._id}>{cat.name}</option>\n              ))}\n            </select>\n          </div>\n\n          {/* Applicable Fields */}\n          {applicableFields.length > 0 && (\n            <div className=\"bg-gray-50 p-4 rounded border border-gray-200 space-y-4\">\n              <h3 className=\"text-sm font-semibold mb-2\">Additional Fields</h3>\n              {applicableFields.map(field => (\n                <div key={field._id}>\n                  <label className=\"block text-sm font-medium text-gray-900 mb-1\">\n                    {field.label || field.name} \n                    {field.type === \"formula\" && \" (Auto-calculated)\"}\n                    {field.config && field.config.isFinalAmount && \" (Final Amount)\"}\n                  </label>\n                  {renderFieldInput(field)}\n                </div>\n              ))}\n            </div>\n          )}\n\n          {/* Recurrence Options */}\n          <div className=\"bg-blue-50 p-4 rounded border border-blue-200 space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-900\">\n              <input\n                type=\"checkbox\"\n                className=\"mr-2\"\n                checked={isRecurring}\n                onChange={(e) => setIsRecurring(e.target.checked)}\n              />\n              Is Recurring?\n            </label>\n            {isRecurring && (\n              <div>\n                <label className=\"block text-sm text-gray-900 mb-1\">Frequency</label>\n                <select\n                  value={recurrenceFrequency}\n                  onChange={(e) => setRecurrenceFrequency(e.target.value)}\n                  className=\"w-full p-2 border border-gray-300 rounded\"\n                >\n                  <option value=\"daily\">Daily</option>\n                  <option value=\"weekly\">Weekly</option>\n                  <option value=\"monthly\">Monthly</option>\n                </select>\n              </div>\n            )}\n          </div>\n\n          {/* Partial Payment */}\n          <div className=\"bg-yellow-50 p-4 rounded border border-yellow-200 space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-900\">\n              <input\n                type=\"checkbox\"\n                className=\"mr-2\"\n                checked={isPartialPayment}\n                onChange={(e) => setIsPartialPayment(e.target.checked)}\n              />\n              Partial Payment/Receivable?\n            </label>\n            {isPartialPayment && (\n              <div className=\"space-y-2\">\n                <div>\n                  <label className=\"block text-sm text-gray-900 mb-1\">Total Amount</label>\n                  <input\n                    type=\"number\"\n                    className=\"w-full p-2 border border-gray-300 rounded\"\n                    value={totalAmount}\n                    onChange={(e) => setTotalAmount(e.target.value)}\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm text-gray-900 mb-1\">Amount Paid/Received So Far</label>\n                  <input\n                    type=\"number\"\n                    className=\"w-full p-2 border border-gray-300 rounded\"\n                    value={amountPaidOrReceived}\n                    onChange={(e) => setAmountPaidOrReceived(e.target.value)}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"flex justify-end mt-6 space-x-3 border-t border-gray-200 pt-4\">\n          <button\n            className=\"bg-gray-300 text-gray-800 px-4 py-2 rounded hover:bg-gray-400 transition\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"bg-green-600 text-white px-4 py-2 rounded font-semibold hover:bg-green-700 transition\"\n            onClick={handleSave}\n          >\n            {isEditMode ? \"Update Record\" : \"Save Record\"}\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default RecordModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}