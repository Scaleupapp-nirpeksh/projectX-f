{"ast":null,"code":"var _jsxFileName = \"/Users/nirpekshnandan/Downloads/projectX-f/src/pages/FieldModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FieldModal = ({\n  onClose,\n  onSave,\n  editField,\n  fields\n}) => {\n  _s();\n  const [error, setError] = useState(\"\");\n  const [fieldForm, setFieldForm] = useState({\n    name: \"\",\n    label: \"\",\n    type: \"string\",\n    options: [],\n    expression: \"\",\n    newOption: \"\"\n  });\n  useEffect(() => {\n    if (editField) {\n      // Populate form with existing field data if editing\n      setFieldForm({\n        name: editField.name,\n        label: editField.label || \"\",\n        type: editField.type,\n        options: editField.options || [],\n        expression: editField.expression || \"\",\n        newOption: \"\"\n      });\n    }\n  }, [editField]);\n  const validateFormulaFields = () => {\n    if (fieldForm.type !== \"formula\" || !fieldForm.expression.trim()) return true;\n    const referencedWords = fieldForm.expression.match(/\\b[a-zA-Z0-9_]+\\b/g) || [];\n    const fieldNames = (fields || []).map(f => f.name);\n    for (let ref of referencedWords) {\n      // Ignore numbers/operators\n      if (!isNaN(ref) || [\"+\", \"-\", \"*\", \"/\", \"(\", \")\", \"and\", \"or\"].includes(ref.toLowerCase())) continue;\n      if (!fieldNames.includes(ref) && ref !== fieldForm.name) {\n        setError(`⚠️ The formula references \"${ref}\", which doesn't exist. Ensure all referenced fields are created first.`);\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleSave = async () => {\n    if (!fieldForm.name.trim()) {\n      setError(\"Field name (ID) is required.\");\n      return;\n    }\n    if (fieldForm.type === \"dropdown\" && fieldForm.options.length === 0) {\n      setError(\"Please add at least one option for the dropdown field.\");\n      return;\n    }\n    if (fieldForm.type === \"formula\" && !fieldForm.expression.trim()) {\n      setError(\"Please provide a formula expression for the formula field.\");\n      return;\n    }\n    if (!validateFormulaFields()) return;\n\n    // Construct data to send\n    const data = {\n      name: fieldForm.name.trim(),\n      label: fieldForm.label.trim(),\n      type: fieldForm.type,\n      options: fieldForm.options,\n      expression: fieldForm.expression.trim()\n    };\n    onSave(data, editField); // Pass data to parent component. Parent handles saving via API.\n  };\n  const handleAddOption = e => {\n    e.preventDefault();\n    const opt = fieldForm.newOption.trim();\n    if (!opt) {\n      setError(\"Please enter a choice before adding.\");\n      return;\n    }\n    setFieldForm({\n      ...fieldForm,\n      options: [...fieldForm.options, opt],\n      newOption: \"\"\n    });\n    setError(\"\");\n  };\n  const handleRemoveOption = index => {\n    const updated = [...fieldForm.options];\n    updated.splice(index, 1);\n    setFieldForm({\n      ...fieldForm,\n      options: updated\n    });\n  };\n  const renderTypeHelp = () => {\n    switch (fieldForm.type) {\n      case \"string\":\n        return \"📄 Text: For simple text like names or descriptions.\";\n      case \"number\":\n        return \"🔢 Number: For amounts, prices, or counts.\";\n      case \"date\":\n        return \"📅 Date: For deadlines, due dates, or payment dates.\";\n      case \"dropdown\":\n        return \"⬇️ Dropdown: Users pick from a list of options (e.g. 'Paid', 'Pending'). Add options below.\";\n      case \"formula\":\n        return \"🧮 Formula: Automatically calculate values from other fields (e.g. amount * tax_rate).\";\n      case \"boolean\":\n        return \"✅ Yes/No: A simple true/false field.\";\n      default:\n        return \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-white rounded-lg shadow-lg max-w-lg mx-auto text-black z-50 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6 text-gray-900\",\n        children: editField ? \"Edit Field\" : \"Create a New Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mb-4 text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-gray-900 mb-2\",\n            children: \"Field Name (ID)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fieldForm.name,\n            onChange: e => setFieldForm({\n              ...fieldForm,\n              name: e.target.value\n            }),\n            className: \"w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            placeholder: \"e.g. invoiceNumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-sm mt-1\",\n            children: \"A unique system ID (not seen by end-users). Example: \\\"invoiceNumber\\\".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-gray-900 mb-2\",\n            children: \"Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fieldForm.label,\n            onChange: e => setFieldForm({\n              ...fieldForm,\n              label: e.target.value\n            }),\n            className: \"w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            placeholder: \"e.g. Invoice Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-sm mt-1\",\n            children: \"A friendly name that users see on forms. Example: \\\"Invoice Number\\\".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-gray-900 mb-2\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            value: fieldForm.type,\n            onChange: e => setFieldForm({\n              ...fieldForm,\n              type: e.target.value,\n              options: [],\n              expression: \"\",\n              newOption: \"\"\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"string\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"number\",\n              children: \"Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dropdown\",\n              children: \"Dropdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"formula\",\n              children: \"Formula\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"boolean\",\n              children: \"Yes/No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-sm mt-1\",\n            children: renderTypeHelp()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), fieldForm.type === \"dropdown\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 p-4 rounded border border-blue-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-semibold mb-2\",\n            children: \"Dropdown Choices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), fieldForm.options.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-700 mb-2\",\n            children: \"Add at least one choice, e.g. \\\"Paid\\\", \\\"Pending\\\".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"mb-2 text-sm\",\n            children: fieldForm.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex items-center justify-between mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-800\",\n                children: opt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"text-red-500 hover:text-red-700 text-sm\",\n                onClick: () => handleRemoveOption(i),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: fieldForm.newOption,\n              onChange: e => setFieldForm({\n                ...fieldForm,\n                newOption: e.target.value\n              }),\n              placeholder: \"Add a choice...\",\n              className: \"flex-grow px-4 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600 text-sm\",\n              onClick: handleAddOption,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), fieldForm.type === \"formula\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-50 p-4 rounded border border-yellow-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-semibold mb-2\",\n            children: \"Formula Expression\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n            value: fieldForm.expression,\n            onChange: e => setFieldForm({\n              ...fieldForm,\n              expression: e.target.value\n            }),\n            placeholder: \"e.g. amount * tax_rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mt-1\",\n            children: \"Use other field Names here. Example: \\\"amount * tax_rate\\\". Ensure those fields exist.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), fields && fields.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Available Fields:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc pl-5 max-h-20 overflow-auto text-gray-800 mt-1\",\n              children: fields.map(f => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: f.name\n              }, f._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 38\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mt-6 space-x-3 border-t border-gray-200 pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-gray-300 text-gray-800 px-4 py-2 rounded hover:bg-gray-400 transition\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-600 text-white px-4 py-2 rounded font-semibold hover:bg-green-700 transition\",\n          onClick: handleSave,\n          children: \"Save Field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(FieldModal, \"45cFHx476tyui/XxJLO22mCFgw8=\");\n_c = FieldModal;\nexport default FieldModal;\nvar _c;\n$RefreshReg$(_c, \"FieldModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","FieldModal","onClose","onSave","editField","fields","_s","error","setError","fieldForm","setFieldForm","name","label","type","options","expression","newOption","validateFormulaFields","trim","referencedWords","match","fieldNames","map","f","ref","isNaN","includes","toLowerCase","handleSave","length","data","handleAddOption","e","preventDefault","opt","handleRemoveOption","index","updated","splice","renderTypeHelp","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","i","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/nirpekshnandan/Downloads/projectX-f/src/pages/FieldModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"../components/Modal\";\n\nconst FieldModal = ({ onClose, onSave, editField, fields }) => {\n  const [error, setError] = useState(\"\");\n  const [fieldForm, setFieldForm] = useState({\n    name: \"\",\n    label: \"\",\n    type: \"string\",\n    options: [],\n    expression: \"\",\n    newOption: \"\"\n  });\n\n  useEffect(() => {\n    if (editField) {\n      // Populate form with existing field data if editing\n      setFieldForm({\n        name: editField.name,\n        label: editField.label || \"\",\n        type: editField.type,\n        options: editField.options || [],\n        expression: editField.expression || \"\",\n        newOption: \"\"\n      });\n    }\n  }, [editField]);\n\n  const validateFormulaFields = () => {\n    if (fieldForm.type !== \"formula\" || !fieldForm.expression.trim()) return true;\n    \n    const referencedWords = fieldForm.expression.match(/\\b[a-zA-Z0-9_]+\\b/g) || [];\n    const fieldNames = (fields || []).map(f => f.name);\n    for (let ref of referencedWords) {\n      // Ignore numbers/operators\n      if (!isNaN(ref) || [\"+\", \"-\", \"*\", \"/\", \"(\", \")\", \"and\", \"or\"].includes(ref.toLowerCase())) continue;\n      if (!fieldNames.includes(ref) && ref !== fieldForm.name) {\n        setError(`⚠️ The formula references \"${ref}\", which doesn't exist. Ensure all referenced fields are created first.`);\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const handleSave = async () => {\n    if (!fieldForm.name.trim()) {\n      setError(\"Field name (ID) is required.\");\n      return;\n    }\n\n    if (fieldForm.type === \"dropdown\" && fieldForm.options.length === 0) {\n      setError(\"Please add at least one option for the dropdown field.\");\n      return;\n    }\n\n    if (fieldForm.type === \"formula\" && !fieldForm.expression.trim()) {\n      setError(\"Please provide a formula expression for the formula field.\");\n      return;\n    }\n\n    if (!validateFormulaFields()) return;\n\n    // Construct data to send\n    const data = {\n      name: fieldForm.name.trim(),\n      label: fieldForm.label.trim(),\n      type: fieldForm.type,\n      options: fieldForm.options,\n      expression: fieldForm.expression.trim()\n    };\n\n    onSave(data, editField); // Pass data to parent component. Parent handles saving via API.\n  };\n\n  const handleAddOption = (e) => {\n    e.preventDefault();\n    const opt = fieldForm.newOption.trim();\n    if (!opt) {\n      setError(\"Please enter a choice before adding.\");\n      return;\n    }\n    setFieldForm({ ...fieldForm, options: [...fieldForm.options, opt], newOption: \"\" });\n    setError(\"\");\n  };\n\n  const handleRemoveOption = (index) => {\n    const updated = [...fieldForm.options];\n    updated.splice(index, 1);\n    setFieldForm({ ...fieldForm, options: updated });\n  };\n\n  const renderTypeHelp = () => {\n    switch (fieldForm.type) {\n      case \"string\":\n        return \"📄 Text: For simple text like names or descriptions.\";\n      case \"number\":\n        return \"🔢 Number: For amounts, prices, or counts.\";\n      case \"date\":\n        return \"📅 Date: For deadlines, due dates, or payment dates.\";\n      case \"dropdown\":\n        return \"⬇️ Dropdown: Users pick from a list of options (e.g. 'Paid', 'Pending'). Add options below.\";\n      case \"formula\":\n        return \"🧮 Formula: Automatically calculate values from other fields (e.g. amount * tax_rate).\";\n      case \"boolean\":\n        return \"✅ Yes/No: A simple true/false field.\";\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"p-6 bg-white rounded-lg shadow-lg max-w-lg mx-auto text-black z-50 relative\">\n        <h2 className=\"text-2xl font-bold mb-6 text-gray-900\">\n          {editField ? \"Edit Field\" : \"Create a New Field\"}\n        </h2>\n        {error && <p className=\"text-red-600 mb-4 text-sm\">{error}</p>}\n        <form className=\"space-y-6\">\n\n          {/* Field Name */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-900 mb-2\">\n              Field Name (ID)\n            </label>\n            <input\n              type=\"text\"\n              value={fieldForm.name}\n              onChange={(e) => setFieldForm({ ...fieldForm, name: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n              placeholder=\"e.g. invoiceNumber\"\n            />\n            <p className=\"text-gray-600 text-sm mt-1\">\n              A unique system ID (not seen by end-users). Example: \"invoiceNumber\".\n            </p>\n          </div>\n\n          {/* Field Label */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-900 mb-2\">\n              Label\n            </label>\n            <input\n              type=\"text\"\n              value={fieldForm.label}\n              onChange={(e) => setFieldForm({ ...fieldForm, label: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n              placeholder=\"e.g. Invoice Number\"\n            />\n            <p className=\"text-gray-600 text-sm mt-1\">\n              A friendly name that users see on forms. Example: \"Invoice Number\".\n            </p>\n          </div>\n\n          {/* Field Type */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-900 mb-2\">\n              Type\n            </label>\n            <select\n              className=\"w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n              value={fieldForm.type}\n              onChange={(e) => setFieldForm({\n                ...fieldForm,\n                type: e.target.value,\n                options: [],\n                expression: \"\",\n                newOption: \"\"\n              })}\n            >\n              <option value=\"string\">Text</option>\n              <option value=\"number\">Number</option>\n              <option value=\"date\">Date</option>\n              <option value=\"dropdown\">Dropdown</option>\n              <option value=\"formula\">Formula</option>\n              <option value=\"boolean\">Yes/No</option>\n            </select>\n            <p className=\"text-gray-600 text-sm mt-1\">{renderTypeHelp()}</p>\n          </div>\n\n          {/* Dropdown Options */}\n          {fieldForm.type === \"dropdown\" && (\n            <div className=\"bg-blue-50 p-4 rounded border border-blue-200\">\n              <h3 className=\"text-sm font-semibold mb-2\">Dropdown Choices</h3>\n              {fieldForm.options.length === 0 && (\n                <p className=\"text-sm text-gray-700 mb-2\">\n                  Add at least one choice, e.g. \"Paid\", \"Pending\".\n                </p>\n              )}\n              <ul className=\"mb-2 text-sm\">\n                {fieldForm.options.map((opt, i) => (\n                  <li key={i} className=\"flex items-center justify-between mb-1\">\n                    <span className=\"text-gray-800\">{opt}</span>\n                    <button\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\n                      onClick={() => handleRemoveOption(i)}\n                    >\n                      Remove\n                    </button>\n                  </li>\n                ))}\n              </ul>\n              <div className=\"flex space-x-2\">\n                <input\n                  type=\"text\"\n                  value={fieldForm.newOption}\n                  onChange={(e) => setFieldForm({ ...fieldForm, newOption: e.target.value })}\n                  placeholder=\"Add a choice...\"\n                  className=\"flex-grow px-4 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n                />\n                <button\n                  className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600 text-sm\"\n                  onClick={handleAddOption}\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          )}\n\n          {/* Formula Expression */}\n          {fieldForm.type === \"formula\" && (\n            <div className=\"bg-yellow-50 p-4 rounded border border-yellow-200\">\n              <h3 className=\"text-sm font-semibold mb-2\">Formula Expression</h3>\n              <textarea\n                className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n                value={fieldForm.expression}\n                onChange={(e) => setFieldForm({ ...fieldForm, expression: e.target.value })}\n                placeholder=\"e.g. amount * tax_rate\"\n              ></textarea>\n              <p className=\"text-sm text-gray-600 mt-1\">\n                Use other field Names here. Example: \"amount * tax_rate\". Ensure those fields exist.\n              </p>\n              {fields && fields.length > 0 && (\n                <div className=\"mt-2 text-sm\">\n                  <strong>Available Fields:</strong>\n                  <ul className=\"list-disc pl-5 max-h-20 overflow-auto text-gray-800 mt-1\">\n                    {fields.map(f => <li key={f._id}>{f.name}</li>)}\n                  </ul>\n                </div>\n              )}\n            </div>\n          )}\n        </form>\n\n        <div className=\"flex justify-end mt-6 space-x-3 border-t border-gray-200 pt-4\">\n          <button\n            className=\"bg-gray-300 text-gray-800 px-4 py-2 rounded hover:bg-gray-400 transition\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"bg-green-600 text-white px-4 py-2 rounded font-semibold hover:bg-green-700 transition\"\n            onClick={handleSave}\n          >\n            Save Field\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default FieldModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}