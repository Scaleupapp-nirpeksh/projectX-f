{"ast":null,"code":"var _jsxFileName = \"/Users/nirpekshnandan/Downloads/projectX-f/src/pages/RecordModal.jsx\",\n  _s = $RefreshSig$();\n// src/pages/RecordModal.jsx\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecordModal = ({\n  onClose,\n  onSave,\n  categories = [],\n  fields = [],\n  partners = [],\n  existingRecord = null\n}) => {\n  _s();\n  // Determine if the modal is in Edit mode\n  const isEditMode = existingRecord !== null;\n\n  // Initialize state variables\n  const [error, setError] = useState(\"\");\n  const [type, setType] = useState(isEditMode ? existingRecord.type : \"revenue\");\n  const [categoryId, setCategoryId] = useState(isEditMode ? existingRecord.categoryId : \"\");\n  const [partnerId, setPartnerId] = useState(isEditMode && existingRecord.partnerId ? existingRecord.partnerId._id : \"\");\n  const [fieldValues, setFieldValues] = useState({});\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [recurrenceFrequency, setRecurrenceFrequency] = useState(\"monthly\");\n  const [isPartialPayment, setIsPartialPayment] = useState(false);\n  const [totalAmount, setTotalAmount] = useState(\"\");\n  const [amountPaidOrReceived, setAmountPaidOrReceived] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false); // Newly added state variable\n\n  // Filter fields based on selected record type\n  const applicableFields = fields.filter(field => {\n    return field.applicableTo.includes(type) || field.applicableTo.includes('both');\n  });\n\n  // **Filter partners based on record type**\n  const filteredPartners = partners.filter(partner => {\n    if (type === 'expense') return partner.type === 'vendor';\n    if (type === 'revenue') return partner.type === 'client';\n    return false;\n  });\n\n  // Initialize field values when fields, type, partnerId, or existingRecord changes\n  useEffect(() => {\n    const initialValues = {};\n    applicableFields.forEach(field => {\n      if (field.type === \"dropdown\" && field.options.length > 0) {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || field.options[0] : field.options[0];\n      } else if (field.type === \"boolean\") {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || false : false;\n      } else {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || \"\" : \"\";\n      }\n    });\n    setFieldValues(initialValues);\n\n    // Handle additional fields in edit mode\n    if (isEditMode) {\n      // Handle partial payment fields if they exist\n      if (existingRecord.fields.total_amount) {\n        setTotalAmount(existingRecord.fields.total_amount);\n      }\n      if (existingRecord.fields.amount_paid) {\n        setAmountPaidOrReceived(existingRecord.fields.amount_paid);\n      }\n      // Handle recurrence\n      if (existingRecord.recurrence && existingRecord.recurrence.frequency !== \"none\") {\n        setIsRecurring(true);\n        setRecurrenceFrequency(existingRecord.recurrence.frequency);\n      }\n      // Handle partial payment\n      if (existingRecord.fields.amount_paid || existingRecord.fields.amount_received) {\n        setIsPartialPayment(true);\n      }\n      // Handle partnerId\n      if (existingRecord.partnerId) {\n        setPartnerId(existingRecord.partnerId._id);\n      }\n    }\n  }, [fields, type, existingRecord, isEditMode]);\n\n  // Recalculate formula fields whenever fieldValues change\n  useEffect(() => {\n    let updatedValues = {\n      ...fieldValues\n    };\n    let hasChanges = false;\n    for (let field of applicableFields) {\n      if (field.type === \"formula\" && field.expression) {\n        const expr = field.expression;\n\n        // Replace field names with their numeric values\n        const referencedNames = expr.match(/\\b[a-zA-Z0-9_]+\\b/g) || [];\n        let safeExpr = expr;\n        for (let ref of referencedNames) {\n          if (ref in updatedValues) {\n            let val = updatedValues[ref];\n            let numVal = Number(val);\n            if (isNaN(numVal)) {\n              numVal = 0;\n            }\n            // Replace all occurrences of ref with numVal\n            safeExpr = safeExpr.replace(new RegExp(`\\\\b${ref}\\\\b`, 'g'), numVal);\n          } else {\n            // If ref doesn't exist or is undefined, treat as 0\n            safeExpr = safeExpr.replace(new RegExp(`\\\\b${ref}\\\\b`, 'g'), 0);\n          }\n        }\n        let result;\n        try {\n          result = Function('\"use strict\";return (' + safeExpr + ')')();\n          if (String(result) !== updatedValues[field.name]) {\n            updatedValues[field.name] = String(result);\n            hasChanges = true;\n          }\n        } catch (e) {\n          console.warn(`Error evaluating formula for field ${field.name}: ${e.message}`);\n        }\n      }\n    }\n    if (hasChanges) {\n      setFieldValues(updatedValues);\n    }\n  }, [fieldValues, applicableFields]);\n  const handleSave = async () => {\n    // Made async\n    setError(\"\");\n    setIsSubmitting(true); // Start submission\n\n    try {\n      if (!type) {\n        setError(\"Please select a record type.\");\n        return;\n      }\n      if (!categoryId) {\n        setError(\"Please select a category.\");\n        return;\n      }\n      if (!partnerId) {\n        setError(\"Please select a vendor/client.\");\n        return;\n      }\n\n      // Check if a final amount field is defined for the chosen type\n      const finalAmountField = applicableFields.find(f => f.config && f.config.isFinalAmount);\n      if (!finalAmountField) {\n        // If no final amount field for this type, show an error\n        setError(`A final amount field is required but not defined for ${type}.`);\n        return;\n      }\n\n      // Validate final amount field numeric\n      const finalAmountValueStr = fieldValues[finalAmountField.name];\n      const finalAmountValue = Number(finalAmountValueStr);\n      if (isNaN(finalAmountValue)) {\n        setError(`The final amount field \"${finalAmountField.label || finalAmountField.name}\" must be numeric.`);\n        return;\n      }\n      if (isPartialPayment) {\n        const t = Number(totalAmount);\n        const p = Number(amountPaidOrReceived);\n        if (isNaN(t) || t <= 0) {\n          setError(\"Please enter a valid total amount for partial payment.\");\n          return;\n        }\n        if (isNaN(p) || p < 0) {\n          setError(\"Please enter a valid amount paid/received so far.\");\n          return;\n        }\n        if (p > t) {\n          setError(\"Amount paid/received cannot exceed total amount.\");\n          return;\n        }\n      }\n      const finalFields = {\n        ...fieldValues\n      };\n      for (let field of applicableFields) {\n        if (field.type === 'number' || field.type === 'formula') {\n          const valStr = finalFields[field.name];\n          const valNum = Number(valStr);\n          if (isNaN(valNum)) {\n            setError(`\"${field.label || field.name}\" must be numeric.`);\n            return;\n          }\n          finalFields[field.name] = valNum;\n        }\n      }\n      const recordData = {\n        type,\n        categoryId,\n        partnerId,\n        // Include partnerId in the record data\n        fields: finalFields,\n        recurrence: isRecurring ? {\n          frequency: recurrenceFrequency\n        } : {\n          frequency: \"none\"\n        },\n        status: \"draft\"\n      };\n      if (isPartialPayment) {\n        recordData.fields[\"total_amount\"] = Number(totalAmount);\n        recordData.fields[\"amount_paid\"] = Number(amountPaidOrReceived);\n      }\n\n      // Include recordId if editing\n      if (isEditMode) {\n        recordData.recordId = existingRecord._id;\n      }\n      await onSave(recordData); // Assuming onSave is an async function\n    } catch (err) {\n      setError(\"An unexpected error occurred.\");\n      console.error(err); // Optional: Log the actual error for debugging\n    } finally {\n      setIsSubmitting(false); // End submission\n    }\n  };\n  const handleFieldChange = (field, value) => {\n    setFieldValues(prev => ({\n      ...prev,\n      [field.name]: value\n    }));\n  };\n  const renderFieldInput = field => {\n    let value = fieldValues[field.name] || \"\";\n    switch (field.type) {\n      case \"string\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n          value: value,\n          onChange: e => handleFieldChange(field, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this);\n      case \"number\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n          value: value,\n          onChange: e => handleFieldChange(field, e.target.value),\n          placeholder: \"Enter a number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this);\n      case \"date\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n          value: value,\n          onChange: e => handleFieldChange(field, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this);\n      case \"dropdown\":\n        return /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n          value: value,\n          onChange: e => handleFieldChange(field, e.target.value),\n          children: field.options.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt,\n            children: opt\n          }, opt, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this);\n      case \"formula\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full p-2 border border-gray-300 rounded bg-gray-100 text-gray-700\",\n          value: value,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this);\n      case \"boolean\":\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: !!value,\n          onChange: e => handleFieldChange(field, e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n\n  // Debugging Statements\n  useEffect(() => {\n    console.log(\"RecordModal: existingRecord:\", existingRecord);\n    console.log(\"RecordModal: isEditMode:\", isEditMode);\n    console.log(\"RecordModal: Categories:\", categories);\n    console.log(\"RecordModal: Partners:\", partners);\n  }, [existingRecord, isEditMode, categories, partners]);\n  useEffect(() => {\n    console.log(\"RecordModal: fieldValues initialized:\", fieldValues);\n  }, [fieldValues]);\n  const isDataLoaded = categories.length > 0 && partners.length > 0;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-white rounded-lg shadow-lg max-w-lg mx-auto text-black z-50 relative max-h-[80vh] overflow-y-auto\",\n      children: !isDataLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"animate-spin h-8 w-8 text-blue-600\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"opacity-25\",\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            stroke: \"currentColor\",\n            strokeWidth: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"opacity-75\",\n            fill: \"currentColor\",\n            d: \"M4 12a8 8 0 018-8v8H4z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4 text-gray-900\",\n          children: isEditMode ? \"Edit Record\" : \"Add New Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-600 mb-4 text-sm\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-900 mb-1\",\n              children: \"Record Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: type,\n              onChange: e => setType(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n              disabled: isEditMode // Prevent changing type during edit\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"revenue\",\n                children: \"Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"expense\",\n                children: \"Expense\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-900 mb-1\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: categoryId,\n              onChange: e => setCategoryId(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a Category --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat._id,\n                children: cat.name\n              }, cat._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-900 mb-1\",\n              children: \"Vendor/Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: partnerId,\n              onChange: e => setPartnerId(e.target.value),\n              className: \"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\",\n              disabled: filteredPartners.length === 0 // Disable if no compatible partners\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a Vendor/Client --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 19\n              }, this), filteredPartners.map(partner => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: partner._id,\n                children: partner.name\n              }, partner._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), filteredPartners.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-red-500 mt-1\",\n              children: [\"No compatible partners available for the selected record type. Please add a \", type === 'expense' ? 'vendor' : 'client', \" first.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), applicableFields.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 p-4 rounded border border-gray-200 space-y-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-sm font-semibold mb-2\",\n              children: \"Additional Fields\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), applicableFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-900 mb-1\",\n                children: [field.label || field.name, field.type === \"formula\" && \" (Auto-calculated)\", field.config && field.config.isFinalAmount && \" (Final Amount)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 23\n              }, this), renderFieldInput(field)]\n            }, field._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-50 p-4 rounded border border-blue-200 space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-900\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"mr-2\",\n                checked: isRecurring,\n                onChange: e => setIsRecurring(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), \"Is Recurring?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this), isRecurring && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm text-gray-900 mb-1\",\n                children: \"Frequency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: recurrenceFrequency,\n                onChange: e => setRecurrenceFrequency(e.target.value),\n                className: \"w-full p-2 border border-gray-300 rounded\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"daily\",\n                  children: \"Daily\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"weekly\",\n                  children: \"Weekly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"monthly\",\n                  children: \"Monthly\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-yellow-50 p-4 rounded border border-yellow-200 space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-900\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"mr-2\",\n                checked: isPartialPayment,\n                onChange: e => setIsPartialPayment(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this), \"Partial Payment/Receivable?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), isPartialPayment && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm text-gray-900 mb-1\",\n                  children: \"Total Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"w-full p-2 border border-gray-300 rounded\",\n                  value: totalAmount,\n                  onChange: e => setTotalAmount(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm text-gray-900 mb-1\",\n                  children: \"Amount Paid/Received So Far\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"w-full p-2 border border-gray-300 rounded\",\n                  value: amountPaidOrReceived,\n                  onChange: e => setAmountPaidOrReceived(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end mt-6 space-x-3 border-t border-gray-200 pt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-gray-300 text-gray-800 px-4 py-2 rounded hover:bg-gray-400 transition\",\n            onClick: onClose,\n            disabled: isSubmitting // Optional: Disable cancel during submission\n            ,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `bg-green-600 text-white px-4 py-2 rounded font-semibold hover:bg-green-700 transition ${isSubmitting ? 'opacity-50 cursor-not-allowed' : ''}`,\n            onClick: handleSave,\n            disabled: isSubmitting || filteredPartners.length === 0 // Disable when submitting or no compatible partners\n            ,\n            children: isSubmitting ? \"Saving...\" : isEditMode ? \"Update Record\" : \"Save Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordModal, \"7ePaKSOVn/iZu3k93qSXfHB69DU=\");\n_c = RecordModal;\nexport default RecordModal;\nvar _c;\n$RefreshReg$(_c, \"RecordModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","RecordModal","onClose","onSave","categories","fields","partners","existingRecord","_s","isEditMode","error","setError","type","setType","categoryId","setCategoryId","partnerId","setPartnerId","_id","fieldValues","setFieldValues","isRecurring","setIsRecurring","recurrenceFrequency","setRecurrenceFrequency","isPartialPayment","setIsPartialPayment","totalAmount","setTotalAmount","amountPaidOrReceived","setAmountPaidOrReceived","isSubmitting","setIsSubmitting","applicableFields","filter","field","applicableTo","includes","filteredPartners","partner","initialValues","forEach","options","length","name","total_amount","amount_paid","recurrence","frequency","amount_received","updatedValues","hasChanges","expression","expr","referencedNames","match","safeExpr","ref","val","numVal","Number","isNaN","replace","RegExp","result","Function","String","e","console","warn","message","handleSave","finalAmountField","find","f","config","isFinalAmount","finalAmountValueStr","finalAmountValue","label","t","p","finalFields","valStr","valNum","recordData","status","recordId","err","handleFieldChange","value","prev","renderFieldInput","className","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","children","map","opt","readOnly","checked","log","isDataLoaded","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","disabled","cat","onClick","_c","$RefreshReg$"],"sources":["/Users/nirpekshnandan/Downloads/projectX-f/src/pages/RecordModal.jsx"],"sourcesContent":["// src/pages/RecordModal.jsx\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"../components/Modal\";\n\nconst RecordModal = ({ onClose, onSave, categories = [], fields = [], partners = [], existingRecord = null }) => {\n  // Determine if the modal is in Edit mode\n  const isEditMode = existingRecord !== null;\n\n  // Initialize state variables\n  const [error, setError] = useState(\"\");\n  const [type, setType] = useState(isEditMode ? existingRecord.type : \"revenue\");\n  const [categoryId, setCategoryId] = useState(isEditMode ? existingRecord.categoryId : \"\");\n  const [partnerId, setPartnerId] = useState(isEditMode && existingRecord.partnerId ? existingRecord.partnerId._id : \"\");\n  const [fieldValues, setFieldValues] = useState({});\n  const [isRecurring, setIsRecurring] = useState(false);\n  const [recurrenceFrequency, setRecurrenceFrequency] = useState(\"monthly\");\n  const [isPartialPayment, setIsPartialPayment] = useState(false);\n  const [totalAmount, setTotalAmount] = useState(\"\");\n  const [amountPaidOrReceived, setAmountPaidOrReceived] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false); // Newly added state variable\n\n  // Filter fields based on selected record type\n  const applicableFields = fields.filter(field => {\n    return field.applicableTo.includes(type) || field.applicableTo.includes('both');\n  });\n\n  // **Filter partners based on record type**\n  const filteredPartners = partners.filter(partner => {\n    if (type === 'expense') return partner.type === 'vendor';\n    if (type === 'revenue') return partner.type === 'client';\n    return false;\n  });\n\n  // Initialize field values when fields, type, partnerId, or existingRecord changes\n  useEffect(() => {\n    const initialValues = {};\n    applicableFields.forEach(field => {\n      if (field.type === \"dropdown\" && field.options.length > 0) {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || field.options[0] : field.options[0];\n      } else if (field.type === \"boolean\") {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || false : false;\n      } else {\n        initialValues[field.name] = isEditMode ? existingRecord.fields[field.name] || \"\" : \"\";\n      }\n    });\n\n    setFieldValues(initialValues);\n\n    // Handle additional fields in edit mode\n    if (isEditMode) {\n      // Handle partial payment fields if they exist\n      if (existingRecord.fields.total_amount) {\n        setTotalAmount(existingRecord.fields.total_amount);\n      }\n      if (existingRecord.fields.amount_paid) {\n        setAmountPaidOrReceived(existingRecord.fields.amount_paid);\n      }\n      // Handle recurrence\n      if (existingRecord.recurrence && existingRecord.recurrence.frequency !== \"none\") {\n        setIsRecurring(true);\n        setRecurrenceFrequency(existingRecord.recurrence.frequency);\n      }\n      // Handle partial payment\n      if (existingRecord.fields.amount_paid || existingRecord.fields.amount_received) {\n        setIsPartialPayment(true);\n      }\n      // Handle partnerId\n      if (existingRecord.partnerId) {\n        setPartnerId(existingRecord.partnerId._id);\n      }\n    }\n  }, [fields, type, existingRecord, isEditMode]);\n\n  // Recalculate formula fields whenever fieldValues change\n  useEffect(() => {\n    let updatedValues = { ...fieldValues };\n    let hasChanges = false;\n\n    for (let field of applicableFields) {\n      if (field.type === \"formula\" && field.expression) {\n        const expr = field.expression;\n\n        // Replace field names with their numeric values\n        const referencedNames = expr.match(/\\b[a-zA-Z0-9_]+\\b/g) || [];\n        let safeExpr = expr;\n\n        for (let ref of referencedNames) {\n          if (ref in updatedValues) {\n            let val = updatedValues[ref];\n            let numVal = Number(val);\n            if (isNaN(numVal)) {\n              numVal = 0;\n            }\n            // Replace all occurrences of ref with numVal\n            safeExpr = safeExpr.replace(new RegExp(`\\\\b${ref}\\\\b`, 'g'), numVal);\n          } else {\n            // If ref doesn't exist or is undefined, treat as 0\n            safeExpr = safeExpr.replace(new RegExp(`\\\\b${ref}\\\\b`, 'g'), 0);\n          }\n        }\n\n        let result;\n        try {\n          result = Function('\"use strict\";return (' + safeExpr + ')')();\n          if (String(result) !== updatedValues[field.name]) {\n            updatedValues[field.name] = String(result);\n            hasChanges = true;\n          }\n        } catch (e) {\n          console.warn(`Error evaluating formula for field ${field.name}: ${e.message}`);\n        }\n      }\n    }\n\n    if (hasChanges) {\n      setFieldValues(updatedValues);\n    }\n\n  }, [fieldValues, applicableFields]);\n\n  const handleSave = async () => { // Made async\n    setError(\"\");\n    setIsSubmitting(true); // Start submission\n\n    try {\n      if (!type) {\n        setError(\"Please select a record type.\");\n        return;\n      }\n      if (!categoryId) {\n        setError(\"Please select a category.\");\n        return;\n      }\n      if (!partnerId) {\n        setError(\"Please select a vendor/client.\");\n        return;\n      }\n\n      // Check if a final amount field is defined for the chosen type\n      const finalAmountField = applicableFields.find(f => f.config && f.config.isFinalAmount);\n\n      if (!finalAmountField) {\n        // If no final amount field for this type, show an error\n        setError(`A final amount field is required but not defined for ${type}.`);\n        return;\n      }\n\n      // Validate final amount field numeric\n      const finalAmountValueStr = fieldValues[finalAmountField.name];\n      const finalAmountValue = Number(finalAmountValueStr);\n      if (isNaN(finalAmountValue)) {\n        setError(`The final amount field \"${finalAmountField.label || finalAmountField.name}\" must be numeric.`);\n        return;\n      }\n\n      if (isPartialPayment) {\n        const t = Number(totalAmount);\n        const p = Number(amountPaidOrReceived);\n        if (isNaN(t) || t <= 0) {\n          setError(\"Please enter a valid total amount for partial payment.\");\n          return;\n        }\n        if (isNaN(p) || p < 0) {\n          setError(\"Please enter a valid amount paid/received so far.\");\n          return;\n        }\n        if (p > t) {\n          setError(\"Amount paid/received cannot exceed total amount.\");\n          return;\n        }\n      }\n\n      const finalFields = { ...fieldValues };\n      for (let field of applicableFields) {\n        if (field.type === 'number' || field.type === 'formula') {\n          const valStr = finalFields[field.name];\n          const valNum = Number(valStr);\n          if (isNaN(valNum)) {\n            setError(`\"${field.label || field.name}\" must be numeric.`);\n            return;\n          }\n          finalFields[field.name] = valNum;\n        }\n      }\n\n      const recordData = {\n        type,\n        categoryId,\n        partnerId, // Include partnerId in the record data\n        fields: finalFields,\n        recurrence: isRecurring ? { frequency: recurrenceFrequency } : { frequency: \"none\" },\n        status: \"draft\",\n      };\n\n      if (isPartialPayment) {\n        recordData.fields[\"total_amount\"] = Number(totalAmount);\n        recordData.fields[\"amount_paid\"] = Number(amountPaidOrReceived);\n      }\n\n      // Include recordId if editing\n      if (isEditMode) {\n        recordData.recordId = existingRecord._id;\n      }\n\n      await onSave(recordData); // Assuming onSave is an async function\n    } catch (err) {\n      setError(\"An unexpected error occurred.\");\n      console.error(err); // Optional: Log the actual error for debugging\n    } finally {\n      setIsSubmitting(false); // End submission\n    }\n  };\n\n  const handleFieldChange = (field, value) => {\n    setFieldValues(prev => ({ ...prev, [field.name]: value }));\n  };\n\n  const renderFieldInput = (field) => {\n    let value = fieldValues[field.name] || \"\";\n    switch (field.type) {\n      case \"string\":\n        return (\n          <input\n            type=\"text\"\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n            value={value}\n            onChange={(e) => handleFieldChange(field, e.target.value)}\n          />\n        );\n      case \"number\":\n        return (\n          <input\n            type=\"text\"\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n            value={value}\n            onChange={(e) => handleFieldChange(field, e.target.value)}\n            placeholder=\"Enter a number\"\n          />\n        );\n      case \"date\":\n        return (\n          <input\n            type=\"date\"\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n            value={value}\n            onChange={(e) => handleFieldChange(field, e.target.value)}\n          />\n        );\n      case \"dropdown\":\n        return (\n          <select\n            className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n            value={value}\n            onChange={(e) => handleFieldChange(field, e.target.value)}\n          >\n            {field.options.map(opt => <option key={opt} value={opt}>{opt}</option>)}\n          </select>\n        );\n      case \"formula\":\n        return (\n          <input\n            type=\"text\"\n            className=\"w-full p-2 border border-gray-300 rounded bg-gray-100 text-gray-700\"\n            value={value}\n            readOnly\n          />\n        );\n      case \"boolean\":\n        return (\n          <input\n            type=\"checkbox\"\n            checked={!!value}\n            onChange={(e) => handleFieldChange(field, e.target.checked)}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  // Debugging Statements\n  useEffect(() => {\n    console.log(\"RecordModal: existingRecord:\", existingRecord);\n    console.log(\"RecordModal: isEditMode:\", isEditMode);\n    console.log(\"RecordModal: Categories:\", categories);\n    console.log(\"RecordModal: Partners:\", partners);\n  }, [existingRecord, isEditMode, categories, partners]);\n\n  useEffect(() => {\n    console.log(\"RecordModal: fieldValues initialized:\", fieldValues);\n  }, [fieldValues]);\n\n  const isDataLoaded = categories.length > 0 && partners.length > 0;\n\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"p-6 bg-white rounded-lg shadow-lg max-w-lg mx-auto text-black z-50 relative max-h-[80vh] overflow-y-auto\">\n        {!isDataLoaded ? (\n          <div className=\"flex justify-center items-center h-full\">\n            <svg className=\"animate-spin h-8 w-8 text-blue-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8v8H4z\"></path>\n            </svg>\n            <span className=\"ml-2\">Loading...</span>\n          </div>\n        ) : (\n          <>\n            <h2 className=\"text-2xl font-bold mb-4 text-gray-900\">{isEditMode ? \"Edit Record\" : \"Add New Record\"}</h2>\n            {error && <p className=\"text-red-600 mb-4 text-sm\">{error}</p>}\n\n            <div className=\"space-y-4\">\n              {/* Record Type */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-900 mb-1\">Record Type</label>\n                <select\n                  value={type}\n                  onChange={(e) => setType(e.target.value)}\n                  className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n                  disabled={isEditMode} // Prevent changing type during edit\n                >\n                  <option value=\"revenue\">Revenue</option>\n                  <option value=\"expense\">Expense</option>\n                </select>\n              </div>\n\n              {/* Category */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-900 mb-1\">Category</label>\n                <select\n                  value={categoryId}\n                  onChange={(e) => setCategoryId(e.target.value)}\n                  className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n                >\n                  <option value=\"\">-- Select a Category --</option>\n                  {categories.map(cat => (\n                    <option key={cat._id} value={cat._id}>{cat.name}</option>\n                  ))}\n                </select>\n              </div>\n\n              {/* Vendor/Client (Partner) */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-900 mb-1\">Vendor/Client</label>\n                <select\n                  value={partnerId}\n                  onChange={(e) => setPartnerId(e.target.value)}\n                  className=\"w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-400\"\n                  disabled={filteredPartners.length === 0} // Disable if no compatible partners\n                >\n                  <option value=\"\">-- Select a Vendor/Client --</option>\n                  {filteredPartners.map(partner => (\n                    <option key={partner._id} value={partner._id}>{partner.name}</option>\n                  ))}\n                </select>\n                {filteredPartners.length === 0 && (\n                  <p className=\"text-sm text-red-500 mt-1\">\n                    No compatible partners available for the selected record type. Please add a {type === 'expense' ? 'vendor' : 'client'} first.\n                  </p>\n                )}\n              </div>\n\n              {/* Applicable Fields */}\n              {applicableFields.length > 0 && (\n                <div className=\"bg-gray-50 p-4 rounded border border-gray-200 space-y-4\">\n                  <h3 className=\"text-sm font-semibold mb-2\">Additional Fields</h3>\n                  {applicableFields.map(field => (\n                    <div key={field._id}>\n                      <label className=\"block text-sm font-medium text-gray-900 mb-1\">\n                        {field.label || field.name} \n                        {field.type === \"formula\" && \" (Auto-calculated)\"}\n                        {field.config && field.config.isFinalAmount && \" (Final Amount)\"}\n                      </label>\n                      {renderFieldInput(field)}\n                    </div>\n                  ))}\n                </div>\n              )}\n\n              {/* Recurrence Options */}\n              <div className=\"bg-blue-50 p-4 rounded border border-blue-200 space-y-2\">\n                <label className=\"block text-sm font-medium text-gray-900\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"mr-2\"\n                    checked={isRecurring}\n                    onChange={(e) => setIsRecurring(e.target.checked)}\n                  />\n                  Is Recurring?\n                </label>\n                {isRecurring && (\n                  <div>\n                    <label className=\"block text-sm text-gray-900 mb-1\">Frequency</label>\n                    <select\n                      value={recurrenceFrequency}\n                      onChange={(e) => setRecurrenceFrequency(e.target.value)}\n                      className=\"w-full p-2 border border-gray-300 rounded\"\n                    >\n                      <option value=\"daily\">Daily</option>\n                      <option value=\"weekly\">Weekly</option>\n                      <option value=\"monthly\">Monthly</option>\n                    </select>\n                  </div>\n                )}\n              </div>\n\n              {/* Partial Payment */}\n              <div className=\"bg-yellow-50 p-4 rounded border border-yellow-200 space-y-2\">\n                <label className=\"block text-sm font-medium text-gray-900\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"mr-2\"\n                    checked={isPartialPayment}\n                    onChange={(e) => setIsPartialPayment(e.target.checked)}\n                  />\n                  Partial Payment/Receivable?\n                </label>\n                {isPartialPayment && (\n                  <div className=\"space-y-2\">\n                    <div>\n                      <label className=\"block text-sm text-gray-900 mb-1\">Total Amount</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full p-2 border border-gray-300 rounded\"\n                        value={totalAmount}\n                        onChange={(e) => setTotalAmount(e.target.value)}\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-sm text-gray-900 mb-1\">Amount Paid/Received So Far</label>\n                      <input\n                        type=\"number\"\n                        className=\"w-full p-2 border border-gray-300 rounded\"\n                        value={amountPaidOrReceived}\n                        onChange={(e) => setAmountPaidOrReceived(e.target.value)}\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"flex justify-end mt-6 space-x-3 border-t border-gray-200 pt-4\">\n              <button\n                className=\"bg-gray-300 text-gray-800 px-4 py-2 rounded hover:bg-gray-400 transition\"\n                onClick={onClose}\n                disabled={isSubmitting} // Optional: Disable cancel during submission\n              >\n                Cancel\n              </button>\n              <button\n                className={`bg-green-600 text-white px-4 py-2 rounded font-semibold hover:bg-green-700 transition ${isSubmitting ? 'opacity-50 cursor-not-allowed' : ''}`}\n                onClick={handleSave}\n                disabled={isSubmitting || filteredPartners.length === 0} // Disable when submitting or no compatible partners\n              >\n                {isSubmitting ? \"Saving...\" : isEditMode ? \"Update Record\" : \"Save Record\"}\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default RecordModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}