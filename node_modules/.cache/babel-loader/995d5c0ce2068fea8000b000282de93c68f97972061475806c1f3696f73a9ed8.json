{"ast":null,"code":"var _jsxFileName = \"/Users/nirpekshnandan/Downloads/projectX-f/src/pages/FieldModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FieldModal = ({\n  onClose,\n  onSave,\n  editField,\n  fields\n}) => {\n  _s();\n  const [error, setError] = useState(\"\");\n  const formulaTextareaRef = useRef(null);\n  const [fieldForm, setFieldForm] = useState({\n    name: \"\",\n    label: \"\",\n    type: \"string\",\n    options: [],\n    expression: \"\",\n    newOption: \"\",\n    // New properties for applicability and config\n    applicableTo: [\"both\"],\n    // could be [\"revenue\", \"expense\", \"both\"]\n    config: {\n      isFinalAmount: false,\n      isTotalPaymentField: false,\n      isAmountPaidField: false\n    }\n  });\n  const [selectedFieldForFormula, setSelectedFieldForFormula] = useState(\"\");\n  useEffect(() => {\n    if (editField) {\n      var _editField$config, _editField$config2, _editField$config3;\n      // Populate form with existing field data if editing\n      setFieldForm({\n        name: editField.name,\n        label: editField.label || \"\",\n        type: editField.type,\n        options: editField.options || [],\n        expression: editField.expression || \"\",\n        newOption: \"\",\n        applicableTo: editField.applicableTo || [\"both\"],\n        config: {\n          isFinalAmount: ((_editField$config = editField.config) === null || _editField$config === void 0 ? void 0 : _editField$config.isFinalAmount) || false,\n          isTotalPaymentField: ((_editField$config2 = editField.config) === null || _editField$config2 === void 0 ? void 0 : _editField$config2.isTotalPaymentField) || false,\n          isAmountPaidField: ((_editField$config3 = editField.config) === null || _editField$config3 === void 0 ? void 0 : _editField$config3.isAmountPaidField) || false\n        }\n      });\n    }\n  }, [editField]);\n  const validateFormulaFields = () => {\n    if (fieldForm.type !== \"formula\" || !fieldForm.expression.trim()) return true;\n    const referencedWords = fieldForm.expression.match(/\\b[a-zA-Z0-9_]+\\b/g) || [];\n    const fieldNames = (fields || []).map(f => f.name);\n    for (let ref of referencedWords) {\n      // Ignore numbers/operators\n      if (!isNaN(ref) || [\"+\", \"-\", \"*\", \"/\", \"(\", \")\", \"and\", \"or\"].includes(ref.toLowerCase())) continue;\n      if (!fieldNames.includes(ref) && ref !== fieldForm.name) {\n        setError(`⚠️ The formula references \"${ref}\", which doesn't exist. Ensure all referenced fields are created first.`);\n        return false;\n      }\n    }\n    return true;\n  };\n  const handleSave = async () => {\n    if (!fieldForm.name.trim()) {\n      setError(\"Field name (ID) is required.\");\n      return;\n    }\n    if (fieldForm.type === \"dropdown\" && fieldForm.options.length === 0) {\n      setError(\"Please add at least one option for the dropdown field.\");\n      return;\n    }\n    if (fieldForm.type === \"formula\" && !fieldForm.expression.trim()) {\n      setError(\"Please provide a formula expression for the formula field.\");\n      return;\n    }\n    if (!validateFormulaFields()) return;\n\n    // Construct the data object for saving\n    const data = {\n      name: fieldForm.name.trim(),\n      label: fieldForm.label.trim(),\n      type: fieldForm.type,\n      options: fieldForm.options,\n      expression: fieldForm.expression.trim() || null,\n      // Include applicableTo and config\n      applicableTo: fieldForm.applicableTo,\n      config: {\n        isFinalAmount: fieldForm.config.isFinalAmount,\n        isTotalPaymentField: fieldForm.config.isTotalPaymentField,\n        isAmountPaidField: fieldForm.config.isAmountPaidField\n      }\n    };\n    onSave(data, editField);\n  };\n  const handleAddOption = e => {\n    e.preventDefault();\n    const opt = fieldForm.newOption.trim();\n    if (!opt) {\n      setError(\"Please enter a choice before adding.\");\n      return;\n    }\n    setFieldForm({\n      ...fieldForm,\n      options: [...fieldForm.options, opt],\n      newOption: \"\"\n    });\n    setError(\"\");\n  };\n  const handleRemoveOption = index => {\n    const updated = [...fieldForm.options];\n    updated.splice(index, 1);\n    setFieldForm({\n      ...fieldForm,\n      options: updated\n    });\n  };\n  const renderTypeHelp = () => {\n    switch (fieldForm.type) {\n      case \"string\":\n        return \"📄 Text: For simple text like names or descriptions.\";\n      case \"number\":\n        return \"🔢 Number: For amounts, prices, or counts.\";\n      case \"date\":\n        return \"📅 Date: For deadlines, due dates, or payment dates.\";\n      case \"dropdown\":\n        return \"⬇️ Dropdown: Users pick from a list of options. Add options below.\";\n      case \"formula\":\n        return \"🧮 Formula: Automatically calculate values. Use other fields' Names (e.g. amount * tax_rate).\";\n      case \"boolean\":\n        return \"✅ Yes/No: A simple true/false field.\";\n      default:\n        return \"\";\n    }\n  };\n  const insertFieldIntoFormula = () => {\n    if (!selectedFieldForFormula) return;\n    const textarea = formulaTextareaRef.current;\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const before = fieldForm.expression.substring(0, start);\n    const after = fieldForm.expression.substring(end);\n    const newExpression = before + selectedFieldForFormula + after;\n    setFieldForm({\n      ...fieldForm,\n      expression: newExpression\n    });\n    validateFormulaFields();\n    setSelectedFieldForFormula(\"\");\n  };\n\n  // Handle changes to applicableTo and config flags\n  const handleApplicableChange = value => {\n    // value could be \"expense\", \"revenue\", \"both\"\n    // If you want a multi-select, adapt this logic\n    // Here we assume a radio button for simplicity\n    setFieldForm({\n      ...fieldForm,\n      applicableTo: [value]\n    });\n  };\n  const handleConfigChange = (key, checked) => {\n    setFieldForm(prev => ({\n      ...prev,\n      config: {\n        ...prev.config,\n        [key]: checked\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-white rounded-lg shadow-lg max-w-lg mx-auto text-black z-50 relative max-h-[80vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6 text-gray-900\",\n        children: editField ? \"Edit Field\" : \"Create a New Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 mb-4 text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-gray-900 mb-2\",\n            children: \"Field Name (ID)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fieldForm.name,\n            onChange: e => setFieldForm({\n              ...fieldForm,\n              name: e.target.value\n            }),\n            className: \"w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            placeholder: \"e.g. invoiceNumber\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-sm mt-1\",\n            children: \"A unique system ID (not seen by end-users).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-gray-900 mb-2\",\n            children: \"Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fieldForm.label,\n            onChange: e => setFieldForm({\n              ...fieldForm,\n              label: e.target.value\n            }),\n            className: \"w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            placeholder: \"e.g. Invoice Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-sm mt-1\",\n            children: \"A friendly name that users see on forms.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-gray-900 mb-2\",\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            value: fieldForm.type,\n            onChange: e => setFieldForm({\n              ...fieldForm,\n              type: e.target.value,\n              options: [],\n              expression: \"\",\n              newOption: \"\"\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"string\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"number\",\n              children: \"Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"date\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dropdown\",\n              children: \"Dropdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"formula\",\n              children: \"Formula\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"boolean\",\n              children: \"Yes/No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-sm mt-1\",\n            children: renderTypeHelp()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-gray-900 mb-2\",\n            children: \"Applicable To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-x-4 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                className: \"mr-1\",\n                checked: fieldForm.applicableTo.includes('both'),\n                onChange: () => handleApplicableChange('both')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this), \"Both\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                className: \"mr-1\",\n                checked: fieldForm.applicableTo.includes('revenue'),\n                onChange: () => handleApplicableChange('revenue')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), \"Revenue Only\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                className: \"mr-1\",\n                checked: fieldForm.applicableTo.includes('expense'),\n                onChange: () => handleApplicableChange('expense')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), \"Expense Only\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 text-sm mt-1\",\n            children: \"Choose if this field applies to revenue, expense, or both record types.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-semibold text-gray-900 mb-2\",\n            children: \"Special Configurations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"mr-2\",\n                checked: fieldForm.config.isFinalAmount,\n                onChange: e => handleConfigChange('isFinalAmount', e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), \"Final Amount Field (Represents the final computed amount)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"mr-2\",\n                checked: fieldForm.config.isTotalPaymentField,\n                onChange: e => handleConfigChange('isTotalPaymentField', e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this), \"Total Payment Field (Represents total amount to be received/paid)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"mr-2\",\n                checked: fieldForm.config.isAmountPaidField,\n                onChange: e => handleConfigChange('isAmountPaidField', e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), \"Amount Paid Field (Represents amount already paid/received)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), fieldForm.type === \"dropdown\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 p-4 rounded border border-blue-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-semibold mb-2\",\n            children: \"Dropdown Choices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), fieldForm.options.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-700 mb-2\",\n            children: \"Add at least one choice.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"mb-2 text-sm\",\n            children: fieldForm.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex items-center justify-between mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-800\",\n                children: opt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"text-red-500 hover:text-red-700 text-sm\",\n                onClick: () => handleRemoveOption(i),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: fieldForm.newOption,\n              onChange: e => setFieldForm({\n                ...fieldForm,\n                newOption: e.target.value\n              }),\n              placeholder: \"Add a choice...\",\n              className: \"flex-grow p-2 border rounded focus:ring-2 focus:ring-blue-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600 text-sm\",\n              onClick: handleAddOption,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), fieldForm.type === \"formula\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-yellow-50 p-4 rounded border border-yellow-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-semibold mb-2\",\n            children: \"Formula Expression\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: formulaTextareaRef,\n            className: \"w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\",\n            value: fieldForm.expression,\n            onChange: e => {\n              setFieldForm({\n                ...fieldForm,\n                expression: e.target.value\n              });\n              validateFormulaFields();\n            },\n            placeholder: \"e.g. amount * tax_rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600 mt-1\",\n            children: \"Use other field Names. Example: \\\"amount * tax_rate\\\".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), fields && fields.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Available Fields:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2 mt-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"p-2 border rounded focus:ring-2 focus:ring-blue-400\",\n                value: selectedFieldForFormula,\n                onChange: e => setSelectedFieldForFormula(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Choose a field to insert --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 23\n                }, this), fields.map(f => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: f.name,\n                  children: f.name\n                }, f._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 40\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600 text-sm\",\n                onClick: insertFieldIntoFormula,\n                children: \"Insert Field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc pl-5 max-h-20 overflow-auto text-gray-800 mt-1\",\n              children: fields.map(f => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: f.name\n              }, f._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 38\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end mt-6 space-x-3 border-t border-gray-200 pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-gray-300 text-gray-800 px-4 py-2 rounded hover:bg-gray-400 transition\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-600 text-white px-4 py-2 rounded font-semibold hover:bg-green-700 transition\",\n          onClick: handleSave,\n          children: \"Save Field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(FieldModal, \"jrWbeFz1IirqkTI10ikNM+2MG5s=\");\n_c = FieldModal;\nexport default FieldModal;\nvar _c;\n$RefreshReg$(_c, \"FieldModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","jsxDEV","_jsxDEV","FieldModal","onClose","onSave","editField","fields","_s","error","setError","formulaTextareaRef","fieldForm","setFieldForm","name","label","type","options","expression","newOption","applicableTo","config","isFinalAmount","isTotalPaymentField","isAmountPaidField","selectedFieldForFormula","setSelectedFieldForFormula","_editField$config","_editField$config2","_editField$config3","validateFormulaFields","trim","referencedWords","match","fieldNames","map","f","ref","isNaN","includes","toLowerCase","handleSave","length","data","handleAddOption","e","preventDefault","opt","handleRemoveOption","index","updated","splice","renderTypeHelp","insertFieldIntoFormula","textarea","current","start","selectionStart","end","selectionEnd","before","substring","after","newExpression","handleApplicableChange","value","handleConfigChange","key","checked","prev","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","placeholder","i","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/nirpekshnandan/Downloads/projectX-f/src/pages/FieldModal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Modal from \"../components/Modal\";\n\nconst FieldModal = ({ onClose, onSave, editField, fields }) => {\n  const [error, setError] = useState(\"\");\n  const formulaTextareaRef = useRef(null);\n  const [fieldForm, setFieldForm] = useState({\n    name: \"\",\n    label: \"\",\n    type: \"string\",\n    options: [],\n    expression: \"\",\n    newOption: \"\",\n    // New properties for applicability and config\n    applicableTo: [\"both\"], // could be [\"revenue\", \"expense\", \"both\"]\n    config: {\n      isFinalAmount: false,\n      isTotalPaymentField: false,\n      isAmountPaidField: false,\n    }\n  });\n  const [selectedFieldForFormula, setSelectedFieldForFormula] = useState(\"\");\n\n  useEffect(() => {\n    if (editField) {\n      // Populate form with existing field data if editing\n      setFieldForm({\n        name: editField.name,\n        label: editField.label || \"\",\n        type: editField.type,\n        options: editField.options || [],\n        expression: editField.expression || \"\",\n        newOption: \"\",\n        applicableTo: editField.applicableTo || [\"both\"],\n        config: {\n          isFinalAmount: editField.config?.isFinalAmount || false,\n          isTotalPaymentField: editField.config?.isTotalPaymentField || false,\n          isAmountPaidField: editField.config?.isAmountPaidField || false,\n        }\n      });\n    }\n  }, [editField]);\n\n  const validateFormulaFields = () => {\n    if (fieldForm.type !== \"formula\" || !fieldForm.expression.trim()) return true;\n    \n    const referencedWords = fieldForm.expression.match(/\\b[a-zA-Z0-9_]+\\b/g) || [];\n    const fieldNames = (fields || []).map(f => f.name);\n    for (let ref of referencedWords) {\n      // Ignore numbers/operators\n      if (!isNaN(ref) || [\"+\", \"-\", \"*\", \"/\", \"(\", \")\", \"and\", \"or\"].includes(ref.toLowerCase())) continue;\n      if (!fieldNames.includes(ref) && ref !== fieldForm.name) {\n        setError(`⚠️ The formula references \"${ref}\", which doesn't exist. Ensure all referenced fields are created first.`);\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const handleSave = async () => {\n    if (!fieldForm.name.trim()) {\n      setError(\"Field name (ID) is required.\");\n      return;\n    }\n\n    if (fieldForm.type === \"dropdown\" && fieldForm.options.length === 0) {\n      setError(\"Please add at least one option for the dropdown field.\");\n      return;\n    }\n\n    if (fieldForm.type === \"formula\" && !fieldForm.expression.trim()) {\n      setError(\"Please provide a formula expression for the formula field.\");\n      return;\n    }\n\n    if (!validateFormulaFields()) return;\n\n    // Construct the data object for saving\n    const data = {\n      name: fieldForm.name.trim(),\n      label: fieldForm.label.trim(),\n      type: fieldForm.type,\n      options: fieldForm.options,\n      expression: fieldForm.expression.trim() || null,\n      // Include applicableTo and config\n      applicableTo: fieldForm.applicableTo,\n      config: {\n        isFinalAmount: fieldForm.config.isFinalAmount,\n        isTotalPaymentField: fieldForm.config.isTotalPaymentField,\n        isAmountPaidField: fieldForm.config.isAmountPaidField,\n      }\n    };\n\n    onSave(data, editField);\n  };\n\n  const handleAddOption = (e) => {\n    e.preventDefault();\n    const opt = fieldForm.newOption.trim();\n    if (!opt) {\n      setError(\"Please enter a choice before adding.\");\n      return;\n    }\n    setFieldForm({ ...fieldForm, options: [...fieldForm.options, opt], newOption: \"\" });\n    setError(\"\");\n  };\n\n  const handleRemoveOption = (index) => {\n    const updated = [...fieldForm.options];\n    updated.splice(index, 1);\n    setFieldForm({ ...fieldForm, options: updated });\n  };\n\n  const renderTypeHelp = () => {\n    switch (fieldForm.type) {\n      case \"string\":\n        return \"📄 Text: For simple text like names or descriptions.\";\n      case \"number\":\n        return \"🔢 Number: For amounts, prices, or counts.\";\n      case \"date\":\n        return \"📅 Date: For deadlines, due dates, or payment dates.\";\n      case \"dropdown\":\n        return \"⬇️ Dropdown: Users pick from a list of options. Add options below.\";\n      case \"formula\":\n        return \"🧮 Formula: Automatically calculate values. Use other fields' Names (e.g. amount * tax_rate).\";\n      case \"boolean\":\n        return \"✅ Yes/No: A simple true/false field.\";\n      default:\n        return \"\";\n    }\n  };\n\n  const insertFieldIntoFormula = () => {\n    if (!selectedFieldForFormula) return;\n\n    const textarea = formulaTextareaRef.current;\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n\n    const before = fieldForm.expression.substring(0, start);\n    const after = fieldForm.expression.substring(end);\n    const newExpression = before + selectedFieldForFormula + after;\n\n    setFieldForm({ ...fieldForm, expression: newExpression });\n    validateFormulaFields();\n    setSelectedFieldForFormula(\"\");\n  };\n\n  // Handle changes to applicableTo and config flags\n  const handleApplicableChange = (value) => {\n    // value could be \"expense\", \"revenue\", \"both\"\n    // If you want a multi-select, adapt this logic\n    // Here we assume a radio button for simplicity\n    setFieldForm({...fieldForm, applicableTo: [value] });\n  };\n\n  const handleConfigChange = (key, checked) => {\n    setFieldForm(prev => ({\n      ...prev,\n      config: {\n        ...prev.config,\n        [key]: checked\n      }\n    }));\n  };\n\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"p-6 bg-white rounded-lg shadow-lg max-w-lg mx-auto text-black z-50 relative max-h-[80vh] overflow-y-auto\">\n        <h2 className=\"text-2xl font-bold mb-6 text-gray-900\">\n          {editField ? \"Edit Field\" : \"Create a New Field\"}\n        </h2>\n        {error && <p className=\"text-red-600 mb-4 text-sm\">{error}</p>}\n\n        <form className=\"space-y-6\">\n          {/* Field Name */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-900 mb-2\">\n              Field Name (ID)\n            </label>\n            <input\n              type=\"text\"\n              value={fieldForm.name}\n              onChange={(e) => setFieldForm({ ...fieldForm, name: e.target.value })}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n              placeholder=\"e.g. invoiceNumber\"\n            />\n            <p className=\"text-gray-600 text-sm mt-1\">\n              A unique system ID (not seen by end-users).\n            </p>\n          </div>\n\n          {/* Field Label */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-900 mb-2\">\n              Label\n            </label>\n            <input\n              type=\"text\"\n              value={fieldForm.label}\n              onChange={(e) => setFieldForm({ ...fieldForm, label: e.target.value })}\n              className=\"w-full px-4 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n              placeholder=\"e.g. Invoice Number\"\n            />\n            <p className=\"text-gray-600 text-sm mt-1\">\n              A friendly name that users see on forms.\n            </p>\n          </div>\n\n          {/* Field Type */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-900 mb-2\">\n              Type\n            </label>\n            <select\n              className=\"w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n              value={fieldForm.type}\n              onChange={(e) => setFieldForm({\n                ...fieldForm,\n                type: e.target.value,\n                options: [],\n                expression: \"\",\n                newOption: \"\"\n              })}\n            >\n              <option value=\"string\">Text</option>\n              <option value=\"number\">Number</option>\n              <option value=\"date\">Date</option>\n              <option value=\"dropdown\">Dropdown</option>\n              <option value=\"formula\">Formula</option>\n              <option value=\"boolean\">Yes/No</option>\n            </select>\n            <p className=\"text-gray-600 text-sm mt-1\">{renderTypeHelp()}</p>\n          </div>\n\n          {/* Applicable To */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-900 mb-2\">\n              Applicable To\n            </label>\n            <div className=\"space-x-4 text-sm\">\n              <label>\n                <input\n                  type=\"radio\"\n                  className=\"mr-1\"\n                  checked={fieldForm.applicableTo.includes('both')}\n                  onChange={() => handleApplicableChange('both')}\n                />\n                Both\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  className=\"mr-1\"\n                  checked={fieldForm.applicableTo.includes('revenue')}\n                  onChange={() => handleApplicableChange('revenue')}\n                />\n                Revenue Only\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  className=\"mr-1\"\n                  checked={fieldForm.applicableTo.includes('expense')}\n                  onChange={() => handleApplicableChange('expense')}\n                />\n                Expense Only\n              </label>\n            </div>\n            <p className=\"text-gray-600 text-sm mt-1\">\n              Choose if this field applies to revenue, expense, or both record types.\n            </p>\n          </div>\n\n          {/* Config Checkboxes */}\n          <div>\n            <label className=\"block text-sm font-semibold text-gray-900 mb-2\">\n              Special Configurations\n            </label>\n            <div className=\"space-y-2 text-sm\">\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"mr-2\"\n                  checked={fieldForm.config.isFinalAmount}\n                  onChange={(e) => handleConfigChange('isFinalAmount', e.target.checked)}\n                />\n                Final Amount Field (Represents the final computed amount)\n              </label>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"mr-2\"\n                  checked={fieldForm.config.isTotalPaymentField}\n                  onChange={(e) => handleConfigChange('isTotalPaymentField', e.target.checked)}\n                />\n                Total Payment Field (Represents total amount to be received/paid)\n              </label>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  className=\"mr-2\"\n                  checked={fieldForm.config.isAmountPaidField}\n                  onChange={(e) => handleConfigChange('isAmountPaidField', e.target.checked)}\n                />\n                Amount Paid Field (Represents amount already paid/received)\n              </label>\n            </div>\n          </div>\n\n          {/* Dropdown Options */}\n          {fieldForm.type === \"dropdown\" && (\n            <div className=\"bg-blue-50 p-4 rounded border border-blue-200\">\n              <h3 className=\"text-sm font-semibold mb-2\">Dropdown Choices</h3>\n              {fieldForm.options.length === 0 && (\n                <p className=\"text-sm text-gray-700 mb-2\">\n                  Add at least one choice.\n                </p>\n              )}\n              <ul className=\"mb-2 text-sm\">\n                {fieldForm.options.map((opt, i) => (\n                  <li key={i} className=\"flex items-center justify-between mb-1\">\n                    <span className=\"text-gray-800\">{opt}</span>\n                    <button\n                      className=\"text-red-500 hover:text-red-700 text-sm\"\n                      onClick={() => handleRemoveOption(i)}\n                    >\n                      Remove\n                    </button>\n                  </li>\n                ))}\n              </ul>\n              <div className=\"flex space-x-2\">\n                <input\n                  type=\"text\"\n                  value={fieldForm.newOption}\n                  onChange={(e) => setFieldForm({ ...fieldForm, newOption: e.target.value })}\n                  placeholder=\"Add a choice...\"\n                  className=\"flex-grow p-2 border rounded focus:ring-2 focus:ring-blue-400\"\n                />\n                <button\n                  className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600 text-sm\"\n                  onClick={handleAddOption}\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          )}\n\n          {/* Formula Expression */}\n          {fieldForm.type === \"formula\" && (\n            <div className=\"bg-yellow-50 p-4 rounded border border-yellow-200\">\n              <h3 className=\"text-sm font-semibold mb-2\">Formula Expression</h3>\n              <textarea\n                ref={formulaTextareaRef}\n                className=\"w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                value={fieldForm.expression}\n                onChange={(e) => {\n                  setFieldForm({ ...fieldForm, expression: e.target.value });\n                  validateFormulaFields();\n                }}\n                placeholder=\"e.g. amount * tax_rate\"\n              ></textarea>\n              <p className=\"text-sm text-gray-600 mt-1\">\n                Use other field Names. Example: \"amount * tax_rate\".\n              </p>\n              {fields && fields.length > 0 && (\n                <div className=\"mt-2 text-sm\">\n                  <strong>Available Fields:</strong>\n                  <div className=\"flex items-center space-x-2 mt-1\">\n                    <select\n                      className=\"p-2 border rounded focus:ring-2 focus:ring-blue-400\"\n                      value={selectedFieldForFormula}\n                      onChange={(e) => setSelectedFieldForFormula(e.target.value)}\n                    >\n                      <option value=\"\">-- Choose a field to insert --</option>\n                      {fields.map(f => <option key={f._id} value={f.name}>{f.name}</option>)}\n                    </select>\n                    <button\n                      type=\"button\"\n                      className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600 text-sm\"\n                      onClick={insertFieldIntoFormula}\n                    >\n                      Insert Field\n                    </button>\n                  </div>\n                  <ul className=\"list-disc pl-5 max-h-20 overflow-auto text-gray-800 mt-1\">\n                    {fields.map(f => <li key={f._id}>{f.name}</li>)}\n                  </ul>\n                </div>\n              )}\n            </div>\n          )}\n        </form>\n\n        <div className=\"flex justify-end mt-6 space-x-3 border-t border-gray-200 pt-4\">\n          <button\n            className=\"bg-gray-300 text-gray-800 px-4 py-2 rounded hover:bg-gray-400 transition\"\n            onClick={onClose}\n          >\n            Cancel\n          </button>\n          <button\n            className=\"bg-green-600 text-white px-4 py-2 rounded font-semibold hover:bg-green-700 transition\"\n            onClick={handleSave}\n          >\n            Save Field\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default FieldModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}